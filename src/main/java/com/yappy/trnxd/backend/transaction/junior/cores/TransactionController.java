package com.yappy.trnxd.backend.transaction.junior.cores;import com.fasterxml.jackson.databind.ObjectMapper;import com.yappy.trnxd.backend.transaction.junior.cross_model.model.BeginP2PTransactionDTO;import com.yappy.trnxd.backend.transaction.junior.cross_model.model.TransactionRequestEntity;import com.yappy.trnxd.backend.transaction.junior.cross_model.model.TransactionResponseEntity;import com.yappy.trnxd.backend.transaction.junior.library.command.CommandTemplate;import com.yappy.trnxd.backend.transaction.junior.library.config.KafkaTopicConfiguration;import com.yappy.trnxd.backend.transaction.junior.library.model.ProfileDTO;import io.swagger.v3.oas.annotations.Operation;import lombok.extern.slf4j.Slf4j;import org.apache.kafka.clients.producer.KafkaProducer;import org.apache.kafka.clients.producer.ProducerRecord;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.MediaType;import org.springframework.kafka.core.KafkaTemplate;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@Slf4j@RestController@RequestMapping("/api/v1/transaction")public class TransactionController {    @Autowired    private KafkaTopicConfiguration kafkaTopicConfiguration;    @Autowired    private KafkaTemplate<String, Object> kafkaTemplate;    @Autowired    private ObjectMapper objectMapper;    @PostMapping(path = "/begin/p2p", produces = MediaType.APPLICATION_JSON_VALUE)    @Operation(summary = "Send Transaction")    public TransactionRequestEntity<BeginP2PTransactionDTO> sendTransaction(@RequestBody TransactionRequestEntity<BeginP2PTransactionDTO> request) {        var response = new TransactionRequestEntity<BeginP2PTransactionDTO>();        response.setBody(response.getBody());        response.setProfile(response.getProfile());        try {            log.info("El Mensaje será publicado en [{}]: {}", kafkaTopicConfiguration.getInterP2PBegin(), request);            kafkaTemplate.send(kafkaTopicConfiguration.getInterP2PBegin(), objectMapper.writeValueAsString(request));            log.info("El Mensaje se publicó en [{}]: {}", kafkaTopicConfiguration.getInterP2PBegin(), request);        } catch (Exception e) {            log.error("error al enviar el mensaje");        }        return response;    }}