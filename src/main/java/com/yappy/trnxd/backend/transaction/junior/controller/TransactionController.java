package com.yappy.trnxd.backend.transaction.junior.controller;import com.yappy.trnxd.backend.transaction.junior.adapter.producer.common.ProducerService;import com.yappy.trnxd.backend.transaction.junior.model.RequestDTO;import com.yappy.trnxd.backend.transaction.junior.model.TransactionRequestDTO;import io.swagger.v3.oas.annotations.Operation;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.http.MediaType;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@Slf4j@RestController@RequestMapping("/api/v1/transaction")public class TransactionController {    @Autowired    protected ProducerService<RequestDTO<TransactionRequestDTO>> transactionProducer;    @Value("${spring.kafka.consumer.topic.name}")    private String topicName;    @PostMapping(path = "/send", produces = MediaType.APPLICATION_JSON_VALUE)    @Operation(summary = "Send Transaction")    public void sendTransaction(@RequestBody RequestDTO<TransactionRequestDTO> request) {        transactionProducer.sendMessage(topicName, request);    }}