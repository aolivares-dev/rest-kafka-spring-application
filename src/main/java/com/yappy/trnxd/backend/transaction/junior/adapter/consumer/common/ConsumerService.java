package com.yappy.trnxd.backend.transaction.junior.adapter.consumer.common;import com.fasterxml.jackson.databind.ObjectMapper;import com.yappy.trnxd.backend.transaction.junior.command.CommonCommand;import com.yappy.trnxd.backend.transaction.junior.model.RequestDTO;import com.yappy.trnxd.backend.transaction.junior.model.ResponseDTO;import com.yappy.trnxd.backend.transaction.junior.model.TransactionRequestDTO;import com.yappy.trnxd.backend.transaction.junior.model.TransactionResponseDTO;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Qualifier;import org.springframework.kafka.annotation.KafkaListener;import org.springframework.stereotype.Service;@Slf4j@Servicepublic class ConsumerService implements CommonConsumer {    @Autowired    @Qualifier("transactionCommand")    protected CommonCommand<RequestDTO<TransactionRequestDTO>, ResponseDTO<TransactionResponseDTO>> transactionCommand;    @Autowired    private ObjectMapper objectMapper;    @KafkaListener(topics = "${spring.kafka.consumer.topic.name}", groupId = "${spring.kafka.consumer.group.name}")    @Override    public void listen(String message) {        try {            var transactionRequestDTO = objectMapper.readValue(message, TransactionRequestDTO.class);            var request = new RequestDTO<TransactionRequestDTO>();            request.setBody(transactionRequestDTO);            var response = transactionCommand.execute(request);            log.debug(response.getBody().toString());        } catch (Exception e) {            failedToListenMessage(e);        }    }    @Override    public void failedToListenMessage(Exception e) {        log.error("Failed to process message: {}", e.getMessage(), e);    }}