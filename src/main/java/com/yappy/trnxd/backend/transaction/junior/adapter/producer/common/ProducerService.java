package com.yappy.trnxd.backend.transaction.junior.adapter.producer.common;import com.fasterxml.jackson.databind.ObjectMapper;import com.yappy.trnxd.backend.transaction.junior.enums.GenericCatalog;import com.yappy.trnxd.backend.transaction.junior.enums.KafkaResponseCatalog;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.kafka.core.KafkaTemplate;import org.springframework.stereotype.Service;@Slf4j@Servicepublic class ProducerService<T> implements CommonProducer<T> {    @Autowired    private final ObjectMapper objectMapper = new ObjectMapper();    @Autowired    private KafkaTemplate<String, String> kafkaTemplate;    @Override    public void sendMessage(String topic, T objectClass) {        var PROCESS_NAME = "Producer Service";        log.info(GenericCatalog.PREFIX_INIT_PROCESS.getMessage(), PROCESS_NAME);        try {            String stringClass = objectMapper.writeValueAsString(objectClass);            kafkaTemplate.send(topic, stringClass);            log.info(KafkaResponseCatalog.MESSAGE_POSTED_CORRECTLY.getMessage(), topic, stringClass);        } catch (Exception e) {            failedToSendMessage(e);        }    }    public void failedToSendMessage(Exception e) {        log.error(GenericCatalog.PREFIX_ERROR_PROCESS.getMessage(), e.getMessage(), e);    }}