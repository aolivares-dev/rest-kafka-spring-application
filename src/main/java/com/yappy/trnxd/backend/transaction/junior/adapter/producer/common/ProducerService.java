package com.yappy.trnxd.backend.transaction.junior.adapter.producer.common;import com.fasterxml.jackson.databind.ObjectMapper;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.kafka.core.KafkaTemplate;import org.springframework.stereotype.Service;@Slf4j@Servicepublic class ProducerService<T> implements CommonProducer<T> {    @Autowired    private KafkaTemplate<String, String> kafkaTemplate;    @Autowired    private final ObjectMapper objectMapper = new ObjectMapper();    @Override    public void sendMessage(String topic, T objectClass) {        try {            String stringClass = objectMapper.writeValueAsString(objectClass);            kafkaTemplate.send(topic, stringClass);            log.debug("Message sent to topic {}: {}", topic, stringClass);        } catch (Exception e) {            failedToSendMessage(e);        }    }    public void failedToSendMessage(Exception e){        log.error("Failed to send message: {}", e.getMessage(), e);    }}